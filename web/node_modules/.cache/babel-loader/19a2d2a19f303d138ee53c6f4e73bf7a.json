{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ms046\\\\React-Flaskapp\\\\React-Flaskapp\\\\web\\\\src\\\\index.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport CustomizedSlider from './Slider';\nimport IconLabelButtons from './ButtonType';\nimport ImageUploadCard from './ImgReader';\nimport reportWebVitals from './reportWebVitals';\nimport { withStyles } from '@material-ui/core/styles';\nimport { green } from '@material-ui/core/colors';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport Favorite from '@material-ui/icons/Favorite';\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GreenCheckbox = withStyles({\n  root: {\n    color: green[400],\n    '&$checked': {\n      color: green[600]\n    }\n  },\n  checked: {}\n})(props => /*#__PURE__*/_jsxDEV(Checkbox, {\n  color: \"default\",\n  ...props\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 27,\n  columnNumber: 15\n}, this));\nexport default function CheckboxLabels() {\n  _s();\n\n  const [state, setState] = React.useState({\n    checkedA: true,\n    checkedB: true,\n    checkedF: true,\n    checkedG: true\n  });\n\n  const handleChange = event => {\n    setState({ ...state,\n      [event.target.name]: event.target.checked\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGroup, {\n    row: true,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedA,\n        onChange: handleChange,\n        name: \"checkedA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 18\n      }, this),\n      label: \"Secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedB,\n        onChange: handleChange,\n        name: \"checkedB\",\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, this),\n      label: \"Primary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"checkedC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 34\n      }, this),\n      label: \"Uncontrolled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      disabled: true,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        name: \"checkedD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 43\n      }, this),\n      label: \"Disabled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      disabled: true,\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: true,\n        name: \"checkedE\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 43\n      }, this),\n      label: \"Disabled\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        checked: state.checkedF,\n        onChange: handleChange,\n        name: \"checkedF\",\n        indeterminate: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this),\n      label: \"Indeterminate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(GreenCheckbox, {\n        checked: state.checkedG,\n        onChange: handleChange,\n        name: \"checkedG\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 18\n      }, this),\n      label: \"Custom color\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: /*#__PURE__*/_jsxDEV(FavoriteBorder, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 34\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(Favorite, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 67\n        }, this),\n        name: \"checkedH\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 18\n      }, this),\n      label: \"Custom icon\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(Checkbox, {\n        icon: /*#__PURE__*/_jsxDEV(CheckBoxOutlineBlankIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 19\n        }, this),\n        checkedIcon: /*#__PURE__*/_jsxDEV(CheckBoxIcon, {\n          fontSize: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 26\n        }, this),\n        name: \"checkedI\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this),\n      label: \"Custom size\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CheckboxLabels, \"s0kYLBcYtsmrjKj7Q1QiIZBSEss=\");\n\n_c = CheckboxLabels;\n\nconst Flask = () => {\n  _s2();\n\n  const [error, setError] = useState(null);\n  const [items, setitems] = useState([]);\n  useEffect(() => {\n    fetch(\"http://localhost:5000/api/v1.0/test\").then(res => res.json()) // res == result\n    .then(result => {\n      setitems(result.items);\n    }, error => {\n      this.setState({\n        isLoaded: true,\n        error\n      });\n    });\n  }); // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     error: null,\n  //     isLoaded: false,\n  //     items: [],\n  //   };\n  // }  \n  // componentDidMount() { // before render\n  //   fetch(\"http://localhost:5000/api/v1.0/test\")\n  //     .then(res => res.json()) // res == result\n  //     .then(\n  //       (result) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           items: result.items,\n  //         });\n  //       },\n  //       (error) => {\n  //         this.setState({\n  //           isLoaded: true,\n  //           error,\n  //         });\n  //       }\n  //     )\n  // }\n\n  const renderCheckbox = () => {\n    return /*#__PURE__*/_jsxDEV(CheckboxLabels, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this);\n  };\n\n  const renderSlider = () => {\n    return /*#__PURE__*/_jsxDEV(CustomizedSlider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this);\n  }; // const {error, isLoaded, items} = this.state;\n\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [\"Error: \", error.message]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 12\n    }, this), items.length == 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 26\n    }, this), !error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Flask\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"Flask-header\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [item.id, \" \", item.img]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"checkbox\",\n            children: this.renderCheckbox()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"slider\",\n            children: /*#__PURE__*/_jsxDEV(CustomizedSlider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"imgreader\",\n            children: /*#__PURE__*/_jsxDEV(ImageUploadCard, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 174,\n              columnNumber: 16\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"button_t\",\n            children: /*#__PURE__*/_jsxDEV(IconLabelButtons, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 12\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 5\n  }, this) // if (error) { \n  //    fetch api return error  from line25\n  //     return ;\n  //   } \n  //   else if (!isLoaded) {\n  //     return <div>Loading...</div>;\n  //   } \n  // else {\n  //   return (\n  //     <div className=\"Flask\">\n  //       <header className=\"Flask-header\">\n  //       <ul>\n  //         {items.map(item => (\n  //           <li key={item.id}>\n  //             {item.id} {item.img}\n  //           </li>\n  //         ))}\n  //         <div className=\"checkbox\">\n  //           {this.renderCheckbox()}\n  //         </div>\n  //         <div className=\"slider\">\n  //           {<CustomizedSlider />}\n  //         </div>\n  //         <div className=\"imgreader\">\n  //           {<ImageUploadCard /> }\n  //         </div>\n  //         <div className=\"button_t\">\n  //           { <IconLabelButtons /> }\n  //         </div>\n  //       </ul>\n  //       </header>\n  //     </div>\n  //   );\n  // }\n  ;\n};\n\n_s2(Flask, \"Z8pW/GHwuzmW48cf1KKn2XDZZks=\");\n\n_c2 = Flask;\nReactDOM.render(\n/*#__PURE__*/\n//<React.StrictMode>\n//  <App />\n//</React.StrictMode>,\n_jsxDEV(Flask, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 229,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals();\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CheckboxLabels\");\n$RefreshReg$(_c2, \"Flask\");","map":{"version":3,"sources":["C:/Users/ms046/React-Flaskapp/React-Flaskapp/web/src/index.js"],"names":["React","useState","useEffect","ReactDOM","CustomizedSlider","IconLabelButtons","ImageUploadCard","reportWebVitals","withStyles","green","FormGroup","FormControlLabel","Checkbox","CheckBoxOutlineBlankIcon","CheckBoxIcon","Favorite","FavoriteBorder","GreenCheckbox","root","color","checked","props","CheckboxLabels","state","setState","checkedA","checkedB","checkedF","checkedG","handleChange","event","target","name","Flask","error","setError","items","setitems","fetch","then","res","json","result","isLoaded","renderCheckbox","renderSlider","message","length","map","item","id","img","render","document","getElementById"],"mappings":"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","sourcesContent":["import React , {useState,useEffect} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n//import App from './App';\r\nimport CustomizedSlider  from './Slider';\r\nimport IconLabelButtons from './ButtonType';\r\nimport ImageUploadCard from './ImgReader';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport { green } from '@material-ui/core/colors';\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Favorite from '@material-ui/icons/Favorite';\r\nimport FavoriteBorder from '@material-ui/icons/FavoriteBorder';\r\n\r\nconst GreenCheckbox = withStyles({\r\n  root: {\r\n    color: green[400],\r\n    '&$checked': {\r\n      color: green[600],\r\n    },\r\n  },\r\n  checked: {},\r\n})((props) => <Checkbox color=\"default\" {...props} />);\r\n\r\nexport default function CheckboxLabels() {\r\n  const [state, setState] = React.useState({\r\n    checkedA: true,\r\n    checkedB: true,\r\n    checkedF: true,\r\n    checkedG: true,\r\n  });\r\n\r\n  const handleChange = (event) => {\r\n    setState({ ...state, [event.target.name]: event.target.checked });\r\n  };\r\n\r\n  return (\r\n    <FormGroup row>\r\n      <FormControlLabel\r\n        control={<Checkbox checked={state.checkedA} onChange={handleChange} name=\"checkedA\" />}\r\n        label=\"Secondary\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedB}\r\n            onChange={handleChange}\r\n            name=\"checkedB\"\r\n            color=\"primary\"\r\n          />\r\n        }\r\n        label=\"Primary\"\r\n      />\r\n      <FormControlLabel control={<Checkbox name=\"checkedC\" />} label=\"Uncontrolled\" />\r\n      <FormControlLabel disabled control={<Checkbox name=\"checkedD\" />} label=\"Disabled\" />\r\n      <FormControlLabel disabled control={<Checkbox checked name=\"checkedE\" />} label=\"Disabled\" />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            checked={state.checkedF}\r\n            onChange={handleChange}\r\n            name=\"checkedF\"\r\n            indeterminate\r\n          />\r\n        }\r\n        label=\"Indeterminate\"\r\n      />\r\n      <FormControlLabel\r\n        control={<GreenCheckbox checked={state.checkedG} onChange={handleChange} name=\"checkedG\" />}\r\n        label=\"Custom color\"\r\n      />\r\n      <FormControlLabel\r\n        control={<Checkbox icon={<FavoriteBorder />} checkedIcon={<Favorite />} name=\"checkedH\" />}\r\n        label=\"Custom icon\"\r\n      />\r\n      <FormControlLabel\r\n        control={\r\n          <Checkbox\r\n            icon={<CheckBoxOutlineBlankIcon fontSize=\"small\" />}\r\n            checkedIcon={<CheckBoxIcon fontSize=\"small\" />}\r\n            name=\"checkedI\"\r\n          />\r\n        }\r\n        label=\"Custom size\"\r\n      />\r\n    </FormGroup>\r\n  );\r\n}\r\n\r\nconst  Flask = () =>  {\r\n    const [error , setError]= useState(null)\r\n    const [items , setitems]= useState([])\r\n    useEffect( () =>{\r\n        fetch(\"http://localhost:5000/api/v1.0/test\")\r\n      .then(res => res.json()) // res == result\r\n      .then(\r\n        (result) => {\r\n          setitems(\r\n           result.items,\r\n          );\r\n        },\r\n        (error) => {\r\n          this.setState({\r\n            isLoaded: true,\r\n            error,\r\n          });\r\n        }\r\n      )\r\n    } )\r\n    // constructor(props) {\r\n  //   super(props);\r\n  //   this.state = {\r\n  //     error: null,\r\n  //     isLoaded: false,\r\n  //     items: [],\r\n  //   };\r\n  // }  \r\n  \r\n  // componentDidMount() { // before render\r\n  //   fetch(\"http://localhost:5000/api/v1.0/test\")\r\n  //     .then(res => res.json()) // res == result\r\n  //     .then(\r\n  //       (result) => {\r\n  //         this.setState({\r\n  //           isLoaded: true,\r\n  //           items: result.items,\r\n  //         });\r\n  //       },\r\n  //       (error) => {\r\n  //         this.setState({\r\n  //           isLoaded: true,\r\n  //           error,\r\n  //         });\r\n  //       }\r\n  //     )\r\n  // }\r\n\r\n  const renderCheckbox =() =>{\r\n    return(\r\n      <CheckboxLabels  />\r\n    )\r\n  }\r\n\r\n  const renderSlider=() =>{\r\n    return(\r\n      <CustomizedSlider />\r\n    )\r\n  }\r\n\r\n  // const {error, isLoaded, items} = this.state;\r\nreturn  (\r\n    <div>\r\n {error && <div>Error: {error.message}</div>}\r\n  {items.length == 0  && <div>Loading...</div>}\r\n  {!error && <div className=\"Flask\">\r\n           <header className=\"Flask-header\">\r\n           <ul>\r\n             {items.map(item => (\r\n              <li key={item.id}>\r\n                {item.id} {item.img}\r\n              </li>\r\n            ))}\r\n            <div className=\"checkbox\">\r\n              {this.renderCheckbox()}\r\n            </div>\r\n            <div className=\"slider\">\r\n              {<CustomizedSlider />}\r\n            </div>\r\n            <div className=\"imgreader\">\r\n              {<ImageUploadCard /> }\r\n            </div>\r\n            <div className=\"button_t\">\r\n              { <IconLabelButtons /> }\r\n            </div>\r\n          </ul>\r\n          </header>\r\n        </div>\r\n}\r\n    </div>\r\n\r\n  // if (error) { \r\n  //    fetch api return error  from line25\r\n  //     return ;\r\n  //   } \r\n  //   else if (!isLoaded) {\r\n  //     return <div>Loading...</div>;\r\n  //   } \r\n    // else {\r\n    //   return (\r\n    //     <div className=\"Flask\">\r\n    //       <header className=\"Flask-header\">\r\n    //       <ul>\r\n    //         {items.map(item => (\r\n    //           <li key={item.id}>\r\n    //             {item.id} {item.img}\r\n    //           </li>\r\n    //         ))}\r\n    //         <div className=\"checkbox\">\r\n    //           {this.renderCheckbox()}\r\n    //         </div>\r\n    //         <div className=\"slider\">\r\n    //           {<CustomizedSlider />}\r\n    //         </div>\r\n    //         <div className=\"imgreader\">\r\n    //           {<ImageUploadCard /> }\r\n    //         </div>\r\n    //         <div className=\"button_t\">\r\n    //           { <IconLabelButtons /> }\r\n    //         </div>\r\n    //       </ul>\r\n    //       </header>\r\n    //     </div>\r\n\r\n    //   );\r\n    // }\r\n    \r\n  )  \r\n\r\n}\r\n\r\nReactDOM.render(\r\n  //<React.StrictMode>\r\n  //  <App />\r\n  //</React.StrictMode>,\r\n  <Flask />,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n\r\n\r\n\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}