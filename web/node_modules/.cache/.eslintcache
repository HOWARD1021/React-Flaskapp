<<<<<<< Updated upstream
[{"/web/src/index.js":"1","/web/src/reportWebVitals.js":"2"},{"size":1631,"mtime":1627278807035,"results":"3","hashOfConfig":"4"},{"size":362,"mtime":1626967670232,"results":"5","hashOfConfig":"4"},{"filePath":"6","messages":"7","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"8"},"5roip7",{"filePath":"9","messages":"10","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/web/src/index.js",["11","12"],"import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\nclass Flask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      items: [],\n    };\n  }\n\n  componentDidMount() { // before render\n    fetch(\"http://localhost:5000/api/v1.0/test\")\n      .then(res => res.json()) // res == result\n      .then(\n        (result) => {\n          this.setState({\n            isLoaded: true,\n            items: result.items,\n          });\n        },\n        (error) => {\n          this.setState({\n            isLoaded: true,\n            error,\n          });\n        }\n      )\n  }\n\n  render() {\n    const {error, isLoaded, items} = this.state;\n    console.log(items)\n    if (error) { // fetch api return error  from line25\n      return <div>Error: {error.message}</div>;\n    } else if (!isLoaded) {\n      return <div>Loading...</div>;\n    } else {\n      return (\n        \n        <ul>\n          {items.map(item => (\n            <li key={item.id}>\n              {item.id} {item.img}\n            </li>\n          ))}\n        </ul>\n      );\n    }\n  }\n}\n\nReactDOM.render(\n\n  <Flask />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","/web/src/reportWebVitals.js",[],{"ruleId":"13","severity":1,"message":"14","line":6,"column":8,"nodeType":"15","messageId":"16","endLine":6,"endColumn":24},{"ruleId":"13","severity":1,"message":"17","line":7,"column":8,"nodeType":"15","messageId":"16","endLine":7,"endColumn":16},"no-unused-vars","'FormControlLabel' is defined but never used.","Identifier","unusedVar","'Checkbox' is defined but never used."]
=======
[{"C:\\Users\\ms046\\React-Flaskapp\\React-Flaskapp\\web\\src\\index.js":"1","C:\\Users\\ms046\\React-Flaskapp\\React-Flaskapp\\web\\src\\Slider.js":"2","C:\\Users\\ms046\\React-Flaskapp\\React-Flaskapp\\web\\src\\ButtonType.js":"3","C:\\Users\\ms046\\React-Flaskapp\\React-Flaskapp\\web\\src\\reportWebVitals.js":"4","C:\\Users\\ms046\\React-Flaskapp\\React-Flaskapp\\web\\src\\ImgReader.js":"5"},{"size":4895,"mtime":1629894804237,"results":"6","hashOfConfig":"7"},{"size":4565,"mtime":1629722853410,"results":"8","hashOfConfig":"7"},{"size":1652,"mtime":1629722853409,"results":"9","hashOfConfig":"7"},{"size":375,"mtime":1629722853456,"results":"10","hashOfConfig":"7"},{"size":5587,"mtime":1629801288362,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"rvj8fp",{"filePath":"14","messages":"15","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"17","messages":"18","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"16"},"C:\\Users\\ms046\\React-Flaskapp\\React-Flaskapp\\web\\src\\index.js",["24"],"C:\\Users\\ms046\\React-Flaskapp\\React-Flaskapp\\web\\src\\Slider.js",[],["25","26"],"C:\\Users\\ms046\\React-Flaskapp\\React-Flaskapp\\web\\src\\ButtonType.js",[],"C:\\Users\\ms046\\React-Flaskapp\\React-Flaskapp\\web\\src\\reportWebVitals.js",[],"C:\\Users\\ms046\\React-Flaskapp\\React-Flaskapp\\web\\src\\ImgReader.js",["27","28","29","30"],"import React from \"react\";\r\n//Card\r\nimport Card from \"@material-ui/core/Card\";\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport CardContent from \"@material-ui/core/CardContent\";\r\n\r\nimport Fab from \"@material-ui/core/Fab\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\n\r\nimport red from \"@material-ui/core/colors/red\";\r\nimport blue from \"@material-ui/core/colors/blue\";\r\n\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport AddPhotoAlternateIcon from \"@material-ui/icons/AddPhotoAlternate\";\r\n\r\nconst styles = (theme) => ({\r\n    root: {\r\n      backgroundColor: theme.palette.background.paper,\r\n      width: 500,\r\n      display: \"flex\",\r\n      justifyContent: \"center\",\r\n      alignItems: \"flex-end\"\r\n    },\r\n    icon: {\r\n      margin: theme.spacing(2)\r\n    },\r\n    iconHover: {\r\n      margin: theme.spacing(2),\r\n      \"&:hover\": {\r\n        color: red[800]\r\n      }\r\n    },\r\n    cardHeader: {\r\n      textalign: \"center\",\r\n      align: \"center\",\r\n      backgroundColor: \"white\"\r\n    },\r\n    input: {\r\n      display: \"none\"\r\n    },\r\n    title: {\r\n      color: blue[800],\r\n      fontWeight: \"bold\",\r\n      fontFamily: \"Montserrat\",\r\n      align: \"center\"\r\n    },\r\n    button: {\r\n      color: blue[300],\r\n      margin: 10\r\n    },\r\n    secondaryButton: {\r\n      color: \"gray\",\r\n      margin: 10\r\n    },\r\n    typography: {\r\n      margin: theme.spacing(2),\r\n      backgroundColor: \"default\"\r\n    },\r\n  \r\n    searchRoot: {\r\n      padding: \"2px 4px\",\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      width: 400\r\n    },\r\n    searchInput: {\r\n      marginLeft: 8,\r\n      flex: 1\r\n    },\r\n    searchIconButton: {\r\n      padding: 10\r\n    },\r\n    searchDivider: {\r\n      width: 1,\r\n      height: 28,\r\n      margin: 4\r\n    }\r\n  });\r\n\r\nclass ImageUploadCard extends React.Component {\r\n    state = {\r\n      mainState: \"initial\", // initial, uploaded, multiple\r\n      imageUploaded: 0,\r\n      selectedFile: null,\r\n      initialTestState:null\r\n    };\r\n  \r\n    handleUploadClick = (event) => {\r\n      console.log();\r\n      var file = event.target.files[0];\r\n      const reader = new FileReader();\r\n      var url = reader.readAsDataURL(file);\r\n  \r\n      reader.onloadend = function (e) {\r\n        this.setState({\r\n          selectedFile: [reader.result]\r\n        });\r\n      }.bind(this);\r\n      console.log(\"url:\", url); // Would see a path?\r\n  \r\n      this.setState({\r\n        mainState: \"uploaded\",\r\n        selectedFile: event.target.files[0],\r\n        imageUploaded: 1,\r\n      });\r\n    };\r\n\r\n    handleTest = (event) =>{\r\n      var files = event.target.files;\r\n      this.setState({\r\n        initialTestState: files\r\n      })\r\n      console.log(\"files\",files)\r\n      console.log(\"this.state.initialTestState\",this.state.initialTestState)\r\n\r\n      for (var i=0; i<files.length; i++) {\r\n        //var item = document.createElement(\"li\");\r\n        //item.innerHTML = \r\n        //output.appendChild(item);\r\n        console.log(\"file:\",files[i].webkitRelativePath);\r\n      };\r\n    }\r\n    renderInitialState() {\r\n      console.log(\"renderInitialState\");\r\n      const { classes, theme } = this.props;\r\n      const { value } = this.state;\r\n      console.log(classes);\r\n      return (\r\n        <React.Fragment>\r\n          <CardContent>\r\n            <Grid container justifyContent=\"center\" alignItems=\"center\">\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"contained-button-file\"\r\n                multiple\r\n                type=\"file\"\r\n                onChange={this.handleUploadClick}\r\n              />\r\n              <label htmlFor=\"contained-button-file\">\r\n                <Fab component=\"span\" className={classes.button}>\r\n                  <AddPhotoAlternateIcon />\r\n                </Fab>\r\n              </label>\r\n              <input\r\n                accept=\"image/*\"\r\n                className={classes.input}\r\n                id=\"multiple-button-file\"\r\n                type=\"file\"\r\n                multiple\r\n                webkitdirectory=\"true\"\r\n                onChange={this.handleTest}\r\n              />\r\n              <label htmlFor=\"multiple-button-file\">\r\n              <Fab component=\"span\" className={classes.button}>\r\n                <AddPhotoAlternateIcon />\r\n              </Fab>\r\n              </label>\r\n            </Grid>\r\n          </CardContent>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n     \r\n    renderUploadedState() {\r\n      console.log(\"renderUploadedState\");\r\n      const { classes, theme } = this.props;\r\n      return (\r\n        <React.Fragment>\r\n          <CardActionArea onClick={this.imageResetHandler}>\r\n            <img\r\n              width=\"100%\"\r\n              className={classes.media}\r\n              src={this.state.selectedFile}\r\n            />\r\n          </CardActionArea>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  \r\n    imageResetHandler = (event) => {\r\n      console.log(\"Click!\");\r\n      this.setState({\r\n        mainState: \"initial\",\r\n        selectedFile: null,\r\n        imageUploaded: 0\r\n      });\r\n    };\r\n  \r\n    render() {\r\n      const { classes } = this.props;\r\n  \r\n      return (\r\n        <React.Fragment>\r\n          <div className={classes.root}>\r\n            <Card className={this.props.cardName}>\r\n              {(this.state.mainState === \"initial\" && this.renderInitialState()) ||\r\n                (this.state.mainState === \"uploaded\" &&\r\n                  this.renderUploadedState())}\r\n            </Card>\r\n          </div>\r\n        </React.Fragment>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default withStyles(styles)(ImageUploadCard);",{"ruleId":"31","severity":1,"message":"32","line":122,"column":9,"nodeType":"33","messageId":"34","endLine":122,"endColumn":21},{"ruleId":"35","replacedBy":"36"},{"ruleId":"37","replacedBy":"38"},{"ruleId":"31","severity":1,"message":"39","line":125,"column":24,"nodeType":"33","messageId":"34","endLine":125,"endColumn":29},{"ruleId":"31","severity":1,"message":"40","line":126,"column":15,"nodeType":"33","messageId":"34","endLine":126,"endColumn":20},{"ruleId":"31","severity":1,"message":"39","line":167,"column":24,"nodeType":"33","messageId":"34","endLine":167,"endColumn":29},{"ruleId":"41","severity":1,"message":"42","line":171,"column":13,"nodeType":"43","endLine":175,"endColumn":15},"no-unused-vars","'renderSlider' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["44"],"no-negated-in-lhs",["45"],"'theme' is assigned a value but never used.","'value' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]
>>>>>>> Stashed changes
