<<<<<<< Updated upstream
var _typeof = require("@babel/runtime-corejs3/helpers/typeof");

var assertThisInitialized = require("./assertThisInitialized");
=======
var _typeof = require("@babel/runtime-corejs3/helpers/typeof")["default"];

var assertThisInitialized = require("./assertThisInitialized.js");
>>>>>>> Stashed changes

function _possibleConstructorReturn(self, call) {
  if (call && (_typeof(call) === "object" || typeof call === "function")) {
    return call;
<<<<<<< Updated upstream
=======
  } else if (call !== void 0) {
    throw new TypeError("Derived constructors may only return object or undefined");
>>>>>>> Stashed changes
  }

  return assertThisInitialized(self);
}

<<<<<<< Updated upstream
module.exports = _possibleConstructorReturn;
=======
module.exports = _possibleConstructorReturn;
module.exports["default"] = module.exports, module.exports.__esModule = true;
>>>>>>> Stashed changes
